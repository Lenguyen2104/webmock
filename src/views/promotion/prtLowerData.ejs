<!DOCTYPE html>
<html
  lang="en"
  translate="no"
  data-dpr="1"
  style="font-size: 48.16px"
  style="min-height: 100vh"
  data-change="4"
>
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="robots" content="noindex,nofollow" />
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no"
    />
    <title>KiKi79</title>
    <link href="/css/promotion/app.css" rel="stylesheet" />
    <link href="/css/promotion/chunk-0_1.css" rel="stylesheet" />
    <link href="/css/promotion/chunk-0_2.css" rel="stylesheet" />
    <link href="/css/promotion/chunk-0_3.css" rel="stylesheet" />
    <link href="/css/promotion/chunk-0_4.css" rel="stylesheet" />
    <link href="/css/promotion/chunk-0_5.css" rel="stylesheet" />
    <link href="/css/promotion/chunk-0_6.css" rel="stylesheet" />
    <link
      rel="shortcut icon"
      href="/images/bitbug_favicon.ico"
      type="image/x-icon"
    />
    <style>
      html,
      body {
        height: 100%;
        width: 100%;
        background-color: #9195a3;
        padding: 0;
        margin: 0;
      }

      .block-click {
        pointer-events: none;
      }
      .mian[data-v-51f72da1] {
        min-height: 100vh;
        background-color: #fbfcfd;
      }
      .mian .audio[data-v-51f72da1] {
        width: 0.66667rem;
        height: 0.66667rem;
      }
      * {box-sizing: border-box;}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}

.topnav .search-container {
  float: right;
}

.topnav input[type=text] {
  padding: 6px;
  margin-top: 8px;
  font-size: 17px;
  border: none;
}

.topnav .search-container button {
  float: right;
  padding: 6px 10px;
  margin-top: 8px;
  margin-right: 16px;
  background: #fff;
  font-size: 17px;
  border: 8px;
  cursor: pointer;
}

.topnav .search-container button:hover {
  background: #fff;
}

@media screen and (max-width: 600px) {
  .topnav .search-container {
    float: none;
  }
  .topnav a, .topnav input[type=text], .topnav .search-container button {
    float: none;
    display: block;
    text-align: left;
    width: 100%;
    margin: 0;
    /* padding: 14px; */
  }
  .topnav input[type=text] {
    border: 1px solid #ccc;
  }
}

.input-container {
        margin-top: 20px;
        margin-left: 12px;
        margin-right: 12px;
      }

      .input-container input {
        /* border-radius: 12px;
        border-color: #fff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        height: 53px;
        box-sizing: border-box;
        outline: 0;
        padding: 0.75rem;
        position: relative;
        width: 100%; */

      }
      .pet-select-container {
        border-radius: 12px;
        border-color: #fff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        /* height: 53px; */
        /* box-sizing: border-box; */
        /* outline: 0; */
        /* padding: 0.75rem; */
        /* position: relative; */
        width: 48%;
      }
    </style>
  </head>
  <body>
    <div id="app">
      <div data-v-51f72da1="" class="mian forgot">
        <div data-v-106b99c8="" data-v-51f72da1="" class="navbar">
          <div
            data-v-106b99c8=""
            class="navbar-left"
            onclick="location.href='/promotion'"
          >
            <div data-v-106b99c8="" class="bank c-row c-row-middle-center">
              <img
                alt=""
                data-v-106b99c8=""
                src="/images/back.c3244ab0.png"
                class="navbar-back"
              />
            </div>
          </div>
          <div data-v-106b99c8="" class="navbar-title" style="font-weight: bold">Dữ liệu cấp dưới</div>
          <div data-v-106b99c8="" class="navbar-right">
            <div data-v-51f72da1="" data-v-106b99c8="" class="c-row"></div>
          </div>
          <!---->
        </div>
        <div data-v-0ff6946a="" class="promotion" style="margin-top:-30px;">
          <div data-v-0ff6946a="" class="box">
            <div
              data-v-0ff6946a=""
              class="c-row c-row-between p-l-15 p-r-15 m-t-5"
              style="margin-top: -20px;"
            >
              <div data-v-0ff6946a="" class="p-r-10">
                <input
                  data-v-0ff6946a=""
                  type="text"
                  maxlength="5"
                  placeholder="Tìm kiếm UID cấp dưới"
                  oninput="value=value.replace(/\D/g,'')"
                  class="ipt"
                  style="margin-right: 30px; width: 180%; border-radius: 18px; border-color: #fff; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
                />
              </div>

              <div data-v-0ff6946a="" class="btn c-tc" style="display: flex; justify-content: center; align-items: center; border-radius: 18px; height: 32px; margin-top: 2px;  background-image: linear-gradient(to right, yellow,#fcc419);background-color: #fcc419;">
                <img src="/images/IconSearchGray.png" alt="Magnifying Glass" style="width: 25px; height: 25px;">
              </div>
            </div>

            <div data-v-0ff6946a="" style="border-color: #ed0; display: flex; align-items: center; justify-content: space-between;">
              <select name="pets" id="pet-select" class="pet-select-container" style="margin-top: 20px;height: 53px; margin-left: 12px;">
                  <option value="FAll" >Toàn bộ</option>
                  <option value="F1">F1</option>
                  <option value="F2">F2</option>
                  <option value="F3">F3</option>
                  <option value="F4">F4</option>
                  <option value="F5">F5</option>
                  <option value="F6">F6</option>
                  <option value="F7">F7</option>
                  <option value="F8">F8</option>
                  <option value="F9">F9</option>
                  <option value="F10">F10</option>
              </select>
              <div class="input-container" style="height: 53px;">
                  <input
                      style="border-color: #fff; height:53px; width: 100%; border-radius: 12px;
                      border-color: #fff;
                      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); font-weight: 600;"
                      data-v-0ff6946a=""
                      type="date"
                      placeholder="Chọn ngày"
                      class="ipt"
                      id="dateInput"
                  />
              </div>
          </div>

            <div class="center" style="display: flex; margin-top: 20px; background-image: linear-gradient(to right, yellow,#fcc419); margin-left: 12px; margin-right: 12px; border-radius: 8px; justify-content: center;box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
              <table style="background-color: transparent; width: 100%; border-radius: 8px; text-align: center;">
                  <tr style="background-color: transparent; ">
                    <td  data-v-7c8bbbf4="" id="num_deposit_users" style="font-size: 16px; color:#b13c4c;font-weight: 600;padding-top: 8px;">0</td>
                    <td data-v-7c8bbbf4="" id="total_deposit_amount" style="font-size: 16px; color:#b13c4c;font-weight: 600;padding-top: 8px;">0</td>
                  </tr>
                  <tr style="background-color: transparent;">
                    <td style="font-size: 12px; color:#b13c4c;font-weight: 600;border-right: 1px solid #fff;">Số người nạp tiền</td>
                    <td style="font-size: 12px; color:#b13c4c;font-weight: 600;">Số tiền nạp</td>
                  </tr>
                  <tr style="background-color: transparent; ">
                    <td data-v-7c8bbbf4="" id="num_bet_users" style="font-size: 16px; color:#b13c4c;font-weight: 600;padding-top: 8px;">0</td>
                    <td data-v-7c8bbbf4="" id="total_bet_amount" style="font-size: 16px; color:#b13c4c;font-weight: 600;padding-top: 8px;">0</td>
                  </tr>
                  <tr style="background-color: transparent;">
                    <td style="font-size: 12px; color:#b13c4c;font-weight: 600;border-right: 1px solid #fff;">Số người cược</td>
                    <td style="font-size: 12px; color:#b13c4c;font-weight: 600;">Số tiền cược</td>
                  </tr>
                  <tr style="background-color: transparent;">
                    <td data-v-7c8bbbf4="" id="num_first_deposit_users" style="font-size: 16px; color:#b13c4c;font-weight: 600;padding-top: 8px;">0</td>
                    <td data-v-7c8bbbf4="" id="total_first_deposit_amount" style="font-size: 16px; color:#b13c4c;font-weight: 600;padding-top: 8px;">0</td>
                  </tr>
                  <tr style="background-color: transparent;">
                    <td style="font-size: 12px; color:#b13c4c;font-weight: 600;border-right: 1px solid #fff;">Số người nạp đầu</td>
                    <td style="font-size: 12px; color:#b13c4c;font-weight: 600;">Tổng nạp đầu</td>
                  </tr>
                  <tr style="background-color: transparent; ">
                    <td  style="font-size: 12px; color:transparent;font-weight: 600;padding-top: 4px;">0</td>
                    <td style="font-size: 12px; color:transparent;font-weight: 600;padding-top: 4px;">0</td>
                  </tr>
              </table>
          </div>

            <div
            data-v-0ff6946a=""
            class="tit c-row c-row-between"
            id="total-mem"
            style="margin-top: 12px; font-weight: bold;"
          >
            Đội trực tiếp(0 Mọi người)
          </div>

            <div data-v-0ff6946a="" class="table">
              <div data-v-0ff6946a="" class="hd van-row">
                <div data-v-0ff6946a="" class="c-tc van-col van-col--4"
                style="
                background-color: #fcc419;
                font-weight: bold;
                font-size: 12px;
                color: #fff;
                border-top-left-radius: 8px;
              "
              >
                  UID
                </div>
                <div
                  data-v-0ff6946a=""
                  class="c-tc van-ellipsis van-col van-col--6"
                  style="
                background-color: #fcc419;
                font-weight: bold;
                font-size: 12px;
                color: #fff;
              "
                >
                  Tên
                </div>
                <div
                  data-v-0ff6946a=""
                  class="c-tc van-ellipsis van-col van-col--6"
                  style="
                background-color: #fcc419;
                font-weight: bold;
                font-size: 12px;
                color: #fff;
              "
                >
                  Doanh thu
                </div>
                <div
                  data-v-0ff6946a=""
                  class="c-tc van-ellipsis van-col van-col--4"
                  style="
                background-color: #fcc419;
                font-weight: bold;
                font-size: 12px;
                color: #fff;
              "
                >
                  TT
                </div>
                <div
                    data-v-0ff6946a=""
                    class="c-tc van-ellipsis van-col van-col--4"
                    style="
            background-color: #fcc419;
            font-weight: bold;
            font-size: 12px;
            color: #fff;
          "
                >
                  Thao tác
                </div>
              </div>
              <div data-v-0ff6946a="" class="list">
                <div data-v-0ff6946a="" role="feed" class="van-list">
                  <div id="van-list"></div>
                  <div class="van-list__finished-text">Không còn nữa</div>
                  <div class="van-list__placeholder"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <%- include('prtDetail.ejs') -%>
        </div>
        <!---->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="/js/client.js"></script>
    <script>
      $(".ipt").on("keyup", function () {
        var value = $(this).val().toLowerCase();
        $("#van-list .item").filter(function () {
          $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
        });
      });

      // let selectedValue; // Biến được định nghĩa ở phạm vi toàn cục
      // $("#pet-select").on("change", function() {
      //   selectedValue = $(this).val(); // Gán giá trị của $(this).val() cho selectedValue
      //   var $items = $("#van-list .item");
      //   $items.hide();
      // switch(selectedValue) {
      //     case "F1":
      //         $items.filter(function() {
      //             return $(this).find('.van-col--6').text().trim().startsWith("Superadmin") || $(this).find('.van-col--6').text().trim() === "Superadmin" || $(this).find('.van-col--6').text().trim() === "1";
      //         }).show();
      //         break;
      //     case "F2":
      //         $items.filter(function() {
      //             return $(this).find('.van-col--6').text().trim().startsWith("Member") || $(this).find('.van-col--6').text().trim() === "2";
      //         }).show();
      //         break;
      //     default:
      //         $items.show();
      //         break;
      // }
      // });

      //   $(".nav .van-tabbar-item:eq(0) img").attr("src", "/images/home1.png");
      //   $(".nav .van-tabbar-item:eq(0) .name").removeClass("action");
      //   $(".nav .van-tabbar-item:eq(2) .name").addClass("action");

      //   function MemRender(datas) {
      //     // console.log("🚀 ~ MemRender ~ datas:", datas)
      //     let html = "";
      //     datas.map((data) => {
      //       html += `
      //                     <div data-v-0ff6946a="" class="item">
      //                         <div data-v-0ff6946a="" class="bd van-row">
      //                             <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc van-col van-col--4">${
      //                               data.id_user
      //                             }</div>
      //                             <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc van-ellipsis van-col van-col--6">${
      //                               data.name_user
      //                             }</div>
      //                             <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc red van-col van-col--6">0</div>
      //                             <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc van-col van-col--4">
      //                                 <span data-v-0ff6946a="">${
      //                                   data.status == 1 ? "Mở" : "Đóng"
      //                                 }</span>
      //                             </div>
      //                             <div data-v-0ff6946a="" style="font-weight: bold" class="van-col van-col--4 c-tc">Chi tiết</div>
      //                         </div>
      //                         <div data-v-0ff6946a="" class="bdshow" style="display: none;">
      //                             <div data-v-0ff6946a="" class="c-row c-row-between">
      //                                 <div data-v-0ff6946a="">Doanh thu cá nhân:0</div>
      //                                 <div data-v-0ff6946a="">Nạp tiền cá nhân:0</div>
      //                             </div>
      //                             <div data-v-0ff6946a="">Thời gian đăng ký:2021-06-02 14:40:23</div>
      //                             <div data-v-0ff6946a="">Thành viên cấp dưới:0</div>
      //                         </div>
      //                     </div>
      //                     `;
      //     });
      //     $("#van-list").html(html);
      //   }
      //   $.ajax({
      //     type: "POST",
      //     url: "/api/webapi/promotion",
      //     dataType: "json",
      //     success: function (response) {
      //       console.log('>>>>',response.invite);
      //       console.log('>>>> selectedValue', selectedValue); // Log giá trị của selectedValue
      //       $("#total-mem").text(
      //         `Đội trực tiếp (${response.f1.length} người)`
      //       );

      //       MemRender(response.f1);
      //     },
      //   });

  $(document).ready(function() {

    // SELECT DAY
    let selectedValue; // Biến được định nghĩa ở phạm vi toàn cục
    let selectedDate = $('#dateInput').val();

    $("#dateInput").on("change", function() {
        selectedDate = $(this).val();
    });

    $("#pet-select").on("change", function() {
      selectedValue = $(this).val(); // Gán giá trị của $(this).val() cho selectedValue
      var $items = $("#van-list .item");
      $items.hide();
      switch(selectedValue) {
        case "F1":
          $items.filter(function() {
            return $(this).find('.van-col--6').text().trim().startsWith("Superadmin") || $(this).find('.van-col--6').text().trim() === "Superadmin" || $(this).find('.van-col--6').text().trim() === "1";
          }).show();
          break;
        case "F2":
          $items.filter(function() {
            return $(this).find('.van-col--6').text().trim().startsWith("Member") || $(this).find('.van-col--6').text().trim() === "2";
          }).show();
          break;
        default:
          $items.show();
          break;
      }
    });

    $(".nav .van-tabbar-item:eq(0) img").attr("src", "/images/home1.png");
    $(".nav .van-tabbar-item:eq(0) .name").removeClass("action");
    $(".nav .van-tabbar-item:eq(2) .name").addClass("action");

    function DataFRender(data) {

      let html = "";
      data.map((item) => {
        // console.log('data>>>>',item);
        html += `
          <div data-v-0ff6946a="" class="item">
            <div data-v-0ff6946a="" class="bd van-row">
                <div data-v-0ff6946a="" id="id-user" value = '${item.id_user}' style="font-weight: bold" class=" c-tc van-col van-col--4">${item.id_user}</div>
              <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc van-ellipsis van-col van-col--6">${item.name_user}</div>
              <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc red van-col van-col--6">${item.roses_f}</div>
              <div data-v-0ff6946a="" style="font-weight: bold" class="c-tc van-col van-col--4">
                  <span data-v-0ff6946a="">${data.status == 1 ? "Mở" : "Đóng"}</span>
              </div>
              <div data-v-0ff6946a="" style="font-weight: bold" class="btn-detail van-col van-col--4 c-tc">Chi tiết</div>
            </div>
            <div data-v-0ff6946a="" class="bdshow" style="display: none;">
                <div data-v-0ff6946a="" class="c-row c-row-between">
                    <div data-v-0ff6946a="">Doanh thu cá nhân:0</div>
                    <div data-v-0ff6946a="">Nạp tiền cá nhân:0</div>
                </div>
                <div data-v-0ff6946a="">Thời gian đăng ký:2021-06-02 14:40:23</div>
                <div data-v-0ff6946a="">Thành viên cấp dưới:0</div>
            </div>
          </div>
        `;
      });
      $("#van-list").html(html);
      
      $('.btn-detail').click(function (e) {
        e.preventDefault();
        var valueID= $(this).closest('.item').find('#id-user').attr('value');
        fetchData(selectedValue,selectedDate);
        $.ajax({
          type: "POST",
          url : "/api/webapi/promotion/detailLowerGradeUser",
          data : {selectedValue: selectedValue ,selectedDate: selectedDate , id_user: valueID},
          dataType: "json",
          success : function (response) {
            console.log(response)
            $('.van-overlay').fadeIn();
            $('#box-join').css('transform', 'translateY(0px)');
            $('body').addClass('van-overflow-hidden');

            $(".list-promotion .table-detail .total_bet_amount").text(response.total_bet_amount);
            $(".list-promotion .table-detail .first_recharge_amount").text(response.first_recharge_amount);
            $(".list-promotion .table-detail .total_recharge").text(response.total_recharge);
            $(".list-promotion .table-detail .total_bet_rose").text(response.total_bet_rose);
            $(".list-promotion .table-detail .first_recharge_rose").text(response.first_recharge_rose);
            $(".list-promotion .table-detail .first_recharge_rose").text(response.first_recharge_rose);
            $(".list-promotion .foot .right").text(`${response.grade_level}: ${response.uid}`);
          }
        })
      });
    }

    function downAndHidden() {
      $('.van-overlay').fadeOut();
      $('#box-join').css('transform', 'translateY(1000px)');
      $('body').removeClass('van-overflow-hidden');
    }

    $('.van-overlay, .btn-back-prtLower').click(function (e) {
      e.preventDefault();
      downAndHidden();
    });



    function fetchData(selectedValue, selectedDate) {
      if (selectedDate == undefined) {
        selectedDate = $('#dateInput').val();
      }
      if (selectedValue == undefined) {
        selectedValue = "FALL"
      }
      $.ajax({
        type: "POST",
        url: "/api/webapi/promotion",
        data: { selectedValue: selectedValue, selectedDate: selectedDate },
        dataType: "json",
        success: function (response) {


          var swlength = 0

          if (selectedValue == undefined || selectedValue == "FAll") {
            swlength = response.invite.select_f_all.length
          } else if (selectedValue == "F1") {
            swlength = response.invite.select_f1.length
          } else if (selectedValue == "F2") {
            swlength = response.invite.select_f2.length
          } else if (selectedValue == "F3") {
            swlength = response.invite.select_f3.length
          } else if (selectedValue == "F4") {
            swlength = response.invite.select_f4.length
          } else if (selectedValue == "F5") {
            swlength = response.invite.select_f5.length
          } else if (selectedValue == "F6") {
            swlength = response.invite.select_f6.length
          } else if (selectedValue == "F7") {
            swlength = response.invite.select_f7.length
          } else if (selectedValue == "F8") {
            swlength = response.invite.select_f8.length
          } else  if (selectedValue == "F9") {
            swlength = response.invite.select_f9.length
          } else if (selectedValue == "F10") {
            swlength = response.invite.select_f10.length
          } else {
            swlength = response.invite.select_f_all.length
          }

          $("#total-mem").text(
            `Đội trực tiếp (${swlength} người)`
          );

            let swDataF;

            if ((selectedValue === undefined || selectedValue === "FAll") && selectedDate === undefined) {
                swDataF = response.invite.select_f_all;
            } else if ((selectedValue === undefined || selectedValue === "FAll") && selectedDate !== undefined) {
                swDataF = response.invite.select_f_all.filter(item => {
                    const itemDate = new Date(parseInt(item.time));
                    const day = ("0" + itemDate.getDate()).slice(-2);
                    const month = itemDate.getMonth() + 1;
                    const formattedMonth = month < 10 ? "0" + month : month;
                    const year = itemDate.getFullYear();
                    const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                    return formattedItemDate === selectedDate;
                });
            } else if ((selectedValue === "F1" ) && selectedDate === undefined) {
                swDataF = response.invite.select_f1;
            } else if ((selectedValue === "F1" ) && selectedDate !== undefined) {
                swDataF = response.invite.select_f1.filter(item => {
                    const itemDate = new Date(parseInt(item.time));
                    const day = ("0" + itemDate.getDate()).slice(-2);
                    const month = itemDate.getMonth() + 1;
                    const formattedMonth = month < 10 ? "0" + month : month;
                    const year = itemDate.getFullYear();
                    const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                    return formattedItemDate === selectedDate;
                });
            } else if ((selectedValue === "F2" ) && selectedDate === undefined) {
                swDataF = response.invite.select_f2;
            } else if ((selectedValue === "F2" ) && selectedDate !== undefined) {
                swDataF = response.invite.select_f2.filter(item => {
                    const itemDate = new Date(parseInt(item.time));
                    const day = ("0" + itemDate.getDate()).slice(-2);
                    const month = itemDate.getMonth() + 1;
                    const formattedMonth = month < 10 ? "0" + month : month;
                    const year = itemDate.getFullYear();
                    const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                    return formattedItemDate === selectedDate;
                });
            } else if ((selectedValue === "F3" ) && selectedDate === undefined) {
                swDataF = response.invite.select_f3;
            } else if ((selectedValue === "F3" ) && selectedDate !== undefined) {
                swDataF = response.invite.select_f3.filter(item => {
                    const itemDate = new Date(parseInt(item.time));
                    const day = ("0" + itemDate.getDate()).slice(-2);
                    const month = itemDate.getMonth() + 1;
                    const formattedMonth = month < 10 ? "0" + month : month;
                    const year = itemDate.getFullYear();
                    const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                    return formattedItemDate === selectedDate;
                });
            } else if ((selectedValue === "F4" ) && selectedDate === undefined) {
                swDataF = response.invite.select_f4;
            } else if ((selectedValue === "F4" ) && selectedDate !== undefined) {
                swDataF = response.invite.select_f4.filter(item => {
                    const itemDate = new Date(parseInt(item.time));
                    const day = ("0" + itemDate.getDate()).slice(-2);
                    const month = itemDate.getMonth() + 1;
                    const formattedMonth = month < 10 ? "0" + month : month;
                    const year = itemDate.getFullYear();
                    const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                    return formattedItemDate === selectedDate;
                });
            } else if ((selectedValue === "F5" ) && selectedDate === undefined) {
              swDataF = response.invite.select_f5;
            } else if ((selectedValue === "F5" ) && selectedDate !== undefined) {
              swDataF = response.invite.select_f5.filter(item => {
                const itemDate = new Date(parseInt(item.time));
                const day = ("0" + itemDate.getDate()).slice(-2);
                const month = itemDate.getMonth() + 1;
                const formattedMonth = month < 10 ? "0" + month : month;
                const year = itemDate.getFullYear();
                const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                return formattedItemDate === selectedDate;
              });
            } else if ((selectedValue === "F6" ) && selectedDate === undefined) {
              swDataF = response.invite.select_f6;
            } else if ((selectedValue === "F6" ) && selectedDate !== undefined) {
              swDataF = response.invite.select_f6.filter(item => {
                const itemDate = new Date(parseInt(item.time));
                const day = ("0" + itemDate.getDate()).slice(-2);
                const month = itemDate.getMonth() + 1;
                const formattedMonth = month < 10 ? "0" + month : month;
                const year = itemDate.getFullYear();
                const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                return formattedItemDate === selectedDate;
              });
            } else if ((selectedValue === "F7" ) && selectedDate === undefined) {
              swDataF = response.invite.select_f7;
            } else if ((selectedValue === "F7" ) && selectedDate !== undefined) {
              swDataF = response.invite.select_f7.filter(item => {
                const itemDate = new Date(parseInt(item.time));
                const day = ("0" + itemDate.getDate()).slice(-2);
                const month = itemDate.getMonth() + 1;
                const formattedMonth = month < 10 ? "0" + month : month;
                const year = itemDate.getFullYear();
                const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                return formattedItemDate === selectedDate;
              });
            } else if ((selectedValue === "F8" ) && selectedDate === undefined) {
              swDataF = response.invite.select_f8;
            } else if ((selectedValue === "F8" ) && selectedDate !== undefined) {
              swDataF = response.invite.select_f8.filter(item => {
                const itemDate = new Date(parseInt(item.time));
                const day = ("0" + itemDate.getDate()).slice(-2);
                const month = itemDate.getMonth() + 1;
                const formattedMonth = month < 10 ? "0" + month : month;
                const year = itemDate.getFullYear();
                const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                return formattedItemDate === selectedDate;
              });
            } else if ((selectedValue === "F9" ) && selectedDate === undefined) {
              swDataF = response.invite.select_f9;
            } else if ((selectedValue === "F9" ) && selectedDate !== undefined) {
              swDataF = response.invite.select_f9.filter(item => {
                const itemDate = new Date(parseInt(item.time));
                const day = ("0" + itemDate.getDate()).slice(-2);
                const month = itemDate.getMonth() + 1;
                const formattedMonth = month < 10 ? "0" + month : month;
                const year = itemDate.getFullYear();
                const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                return formattedItemDate === selectedDate;
              });
            } else if ((selectedValue === "F10" ) && selectedDate === undefined) {
              swDataF = response.invite.select_f10;
            } else if ((selectedValue === "F10" ) && selectedDate !== undefined) {
              swDataF = response.invite.select_f10.filter(item => {
                const itemDate = new Date(parseInt(item.time));
                const day = ("0" + itemDate.getDate()).slice(-2);
                const month = itemDate.getMonth() + 1;
                const formattedMonth = month < 10 ? "0" + month : month;
                const year = itemDate.getFullYear();
                const formattedItemDate = `${day}-${formattedMonth}-${year}`;
                return formattedItemDate === selectedDate;
              });
            } else {
                swDataF = response.invite.select_f_all;
            }

          DataFRender(swDataF);

          // var swDataF = response.invite.select_f_all

          // if (selectedValue == undefined || selectedValue == "FAll") {
          //   swDataF = response.invite.select_f_all
          // } else if (selectedValue == "F1") {
          //   swDataF = response.invite.select_f1
          // } else if (selectedValue == "F2") {
          //   swDataF = response.invite.select_f2
          // } else if (selectedValue == "F3") {
          //   swDataF = response.invite.select_f3
          // } else if (selectedValue == "F4") {
          //   swDataF = response.invite.select_f4
          // } else {
          //   swDataF = response.invite.select_f_all
          // }
          // DataFRender(swDataF);

          var swSummaryF =  response.invite.summary.summary_f_all
          // console.log("🚀 ~ fetchData ~ swSummaryF:", swSummaryF)

          switch(selectedValue) {
              case undefined:
                  swSummaryF = response.invite.summary.summary_f_all;
                  break;
              case "FAll":
                  swSummaryF = response.invite.summary.summary_f_all;
                  break;
              case "F1":
                  swSummaryF = response.invite.summary.summary_f_1;
                  break;
              case "F2":
                  swSummaryF = response.invite.summary.summary_f_2;
                  break;
              case "F3":
                  swSummaryF = response.invite.summary.summary_f_3;
                  break;
              case "F4":
                  swSummaryF = response.invite.summary.summary_f_4;
                  break;
              case "F5":
                  swSummaryF = response.invite.summary.summary_f_5;
                break;
              case "F6":
                  swSummaryF = response.invite.summary.summary_f_6;
                break;
              case "F7":
                  swSummaryF = response.invite.summary.summary_f_7;
                break;
              case "F8":
                  swSummaryF = response.invite.summary.summary_f_8;
                break;
              case "F9":
                  swSummaryF = response.invite.summary.summary_f_9;
                break;
              case "F10":
                  swSummaryF = response.invite.summary.summary_f_10;
                break;
              case "FNoData":
                  swSummaryF = response.invite.summary.summary_f_no_data;
                  break;
              default:
                  swSummaryF = response.invite.summary.summary_f_all;
          }
          // console.log('summary>>>>>',swSummaryF);
          $("#num_bet_users").text(swSummaryF[0].num_bet_users);
          $("#num_deposit_users").text(swSummaryF[0].num_deposit_users);
          $("#num_first_deposit_users").text(swSummaryF[0].num_first_deposit_users);
          $("#total_bet_amount").text(formatM(swSummaryF[0].total_bet_amount));
          $("#total_deposit_amount").text(formatM(swSummaryF[0].total_deposit_amount));
          $("#total_first_deposit_amount").text(formatM(swSummaryF[0].total_first_deposit_amount));

        },
      });
    }

      // Gọi fetchData khi trang được tải và khi thay đổi lựa chọn
    fetchData(selectedValue);
    $("#pet-select").change(function() {
      fetchData(selectedValue);
    });

    // Thêm sự kiện cho #dateInput
    $("#dateInput").change(function() {
        selectedDate = $(this).val(); // Loại bỏ từ khóa var
        fetchData(selectedValue, selectedDate); // Gọi fetchData với giá trị selectedDate
    });

  });
    </script>
    <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
  />
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script src="https://npmcdn.com/flatpickr/dist/flatpickr.min.js"></script>
  <script src="https://npmcdn.com/flatpickr/dist/l10n/vn.js"></script>
  <link
    rel="stylesheet"
    type="text/css"
    href="https://npmcdn.com/flatpickr/dist/themes/material_red.css"
  />
  <script>
    // const formattedDate = currentDate.split("-").reverse().join("-");
    // console.log(formattedDate);
    const currentDate = new Date();
    const day = String(currentDate.getDate()).padStart(2, "0");
    const month = String(currentDate.getMonth() + 1).padStart(2, "0");
    const year = currentDate.getFullYear();
    const formattedDefaultDate = `${day}-${month}-${year}`;
    document.getElementById("dateInput").value = formattedDefaultDate;
    flatpickr("#dateInput", {
      dateFormat: "d-m-Y",
      altFormat: "d-m-Y",
      locale: "vn",
      weekNumbers: true,
      defaultDate: formattedDefaultDate,
    });
    function formatM(params) {
      if (isNaN(params) || params === null || params === undefined || params === 0) {
        return 0; // Nếu đúng, trả về 0
      }
        var money = params;
        var config = {
          style: "currency",
          currency: "VND",
          maximumFractionDigits: 9,
        };
        var formate = new Intl.NumberFormat("vi-VN", config).format(money);
        return formate;
      }

      $.ajax({
        type: "POST",
        url: "/api/webapi/promotion",
        data: {},
        dataType: "json",
        success: function (response) {

          $(".Loading").fadeOut(0);
          $(".num").text(response.invite.f1);
          $(".txt").text(response.invite.f1);
          $("#f1").text(response.invite.f1);
          $("#f1_today").text(response.invite.f1_today);
          $("#f_all_today").text(response.invite.f_all_today);
          $("#f_total").text(response.invite.total_f);
          $(".numtotal_f").text(response.invite.total_f);
          $(".napdau").text(response.invite.napdau);
          $("#money").text(
            formatM(response.invite.money)
          );

          $("#roses_f1").text(
            formatM(response.invite.roses_f1)
          );
          $("#roses_f").text(
            "Hoa hồng đội: " + formatM(response.invite.roses_f)
          );
          $("#roses_all").text(formatM(response.invite.roses_all));
          $("#roses_today").text(formatM(response.invite.roses_today));
          $(".amountMoney").text(formatM(response.invite.amountMoney));
          $(".numberOfPeopleDeposit").text(response.invite.numberOfPeopleDeposit);
          $(".amountMoneys").text(formatM(response.invite.amountMoney));

          if (response.status === false) return (location.href = "/home");
          RosesRender(response.level);
          $(".btn-box .btn:eq(0)").attr(
            "data-clipboard-text",
            response.info[0].code
          );
          $(".btn-box .btn:eq(1)").attr(
            "data-clipboard-text",
            window.location.hostname +
              `/register?r_code=${response.info[0].code}`
          );
          var qrcode = new QRCode("qrcode");
          $("#qrcode").attr(
            "title",
            window.location.hostname +
              `/register?r_code=${response.info[0].code}`
          );
          function makeCode() {
            qrcode.makeCode(
              window.location.hostname +
                `/register?r_code=${response.info[0].code}`
            );
          }

          makeCode();
        },
      })

      let typeid = $('html').attr('data-change');
      $.ajax({
        type: "POST",
        url: "/api/webapi/admin/totalJoin",
        data: {
            typeid: typeid,
        },
        dataType: "json",
        success: function (response) {
          // console.log('>>>>>',response);
          let array = response.list_orders;
            let totalAmount = 0;

            for (let i = 0; i < array.length; i++) {
                totalAmount += array[i].amount;
            }

            let result = totalAmount * 1000;

          $(".amountBets").text(formatM(result * 100));
          $(".numberOfBets").text(response.list_orders.length);
          $(".amountMoneys").text(formatM(response.invite.amountMoney));

          if (response.status === false) return (location.href = "/home");
          RosesRender(response.level);
          $(".btn-box .btn:eq(0)").attr(
            "data-clipboard-text",
            response.info[0].code
          );
          $(".btn-box .btn:eq(1)").attr(
            "data-clipboard-text",
            window.location.hostname +
              `/register?r_code=${response.info[0].code}`
          );
          var qrcode = new QRCode("qrcode");
          $("#qrcode").attr(
            "title",
            window.location.hostname +
              `/register?r_code=${response.info[0].code}`
          );
          function makeCode() {
            qrcode.makeCode(
              window.location.hostname +
                `/register?r_code=${response.info[0].code}`
            );
          }

          makeCode();
        },
      })
  </script>
  </body>
</html>
